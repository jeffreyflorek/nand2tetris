// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,
             sel=address,
             a=register-a-load,
             b=register-b-load,
             c=register-c-load,
             d=register-d-load,
             e=register-e-load,
             f=register-f-load,
             g=register-g-load,
             h=register-h-load);

    Register(in=in, load=register-a-load, out=register-a);
    Register(in=in, load=register-b-load, out=register-b);
    Register(in=in, load=register-c-load, out=register-c);
    Register(in=in, load=register-d-load, out=register-d);
    Register(in=in, load=register-e-load, out=register-e);
    Register(in=in, load=register-f-load, out=register-f);
    Register(in=in, load=register-g-load, out=register-g);
    Register(in=in, load=register-h-load, out=register-h);

    Mux8Way16(a=register-a,
              b=register-b,
              c=register-c,
              d=register-d,
              e=register-e,
              f=register-f,
              g=register-g,
              h=register-h,
              sel=address,
              out=out);
}
