// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,
             sel=address[9..11],
             a=ram-a-load,
             b=ram-b-load,
             c=ram-c-load,
             d=ram-d-load,
             e=ram-e-load,
             f=ram-f-load,
             g=ram-g-load,
             h=ram-h-load);

    RAM512(in=in, load=ram-a-load, address=address[0..8], out=ram-a);
    RAM512(in=in, load=ram-b-load, address=address[0..8], out=ram-b);
    RAM512(in=in, load=ram-c-load, address=address[0..8], out=ram-c);
    RAM512(in=in, load=ram-d-load, address=address[0..8], out=ram-d);
    RAM512(in=in, load=ram-e-load, address=address[0..8], out=ram-e);
    RAM512(in=in, load=ram-f-load, address=address[0..8], out=ram-f);
    RAM512(in=in, load=ram-g-load, address=address[0..8], out=ram-g);
    RAM512(in=in, load=ram-h-load, address=address[0..8], out=ram-h);

    Mux8Way16(a=ram-a,
              b=ram-b,
              c=ram-c,
              d=ram-d,
              e=ram-e,
              f=ram-f,
              g=ram-g,
              h=ram-h,
              sel=address[9..11],
              out=out);
}
